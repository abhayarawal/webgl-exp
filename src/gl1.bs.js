// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var canvasNode = "webgl-canvass";

var elCanvas = document.getElementById(canvasNode);

var elCanvas$1 = elCanvas === null ? undefined : Caml_option.some(elCanvas);

if (elCanvas !== null) {
  console.log(elCanvas$1);
} else {
  console.log("webgl-canvass element not found");
}

var class_tables = [
  0,
  0,
  0
];

var class_tables$1 = [
  0,
  0,
  0
];

function createShader(gl, sType, source) {
  if (sType) {
    if (!class_tables$1[0]) {
      var $$class = CamlinternalOO.create_table(0);
      var env = CamlinternalOO.new_variable($$class, "");
      var env_init = function (env$1) {
        var self = CamlinternalOO.create_object_opt(0, $$class);
        self[env] = env$1;
        return self;
      };
      CamlinternalOO.init_class($$class);
      class_tables$1[0] = env_init;
    }
    return Curry._1(class_tables$1[0], 0);
  } else {
    if (!class_tables[0]) {
      var $$class$1 = CamlinternalOO.create_table(0);
      var env$1 = CamlinternalOO.new_variable($$class$1, "");
      var env_init$1 = function (env$2) {
        var self = CamlinternalOO.create_object_opt(0, $$class$1);
        self[env$1] = env$2;
        return self;
      };
      CamlinternalOO.init_class($$class$1);
      class_tables[0] = env_init$1;
    }
    return Curry._1(class_tables[0], 0);
  }
}

exports.canvasNode = canvasNode;
exports.elCanvas = elCanvas$1;
exports.createShader = createShader;
/* elCanvas Not a pure module */
